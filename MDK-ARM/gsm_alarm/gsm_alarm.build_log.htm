<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.35.0.0
Copyright (C) 2021 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: 1 GYP, gpx, LIC=8MZI6-D13QP-KU24L-0NATI-6CJLK-TGJBR
 
Tool Versions:
Toolchain:       MDK-ARM Professional  Version: 5.35.0.2
Toolchain Path:  C:\Keil_v5\ARM\ARMCC\Bin
C Compiler:      Armcc.exe V5.06 update 7 (build 960)
Assembler:       Armasm.exe V5.06 update 7 (build 960)
Linker/Locator:  ArmLink.exe V5.06 update 7 (build 960)
Library Manager: ArmAr.exe V5.06 update 7 (build 960)
Hex Converter:   FromElf.exe V5.06 update 7 (build 960)
CPU DLL:         SARMCM3.DLL V5.35.0.2
Dialog DLL:      DCM.DLL V1.17.3.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.9.0
Dialog DLL:      TCM.DLL V1.53.0.0
 
<h2>Project:</h2>
C:\stm32\gsm_alarm\MDK-ARM\gsm_alarm.uvprojx
Project File Date:  01/28/2024

<h2>Output:</h2>
*** Using Compiler 'V5.06 update 7 (build 960)', folder: 'C:\Keil_v5\ARM\ARMCC\Bin'
Build target 'gsm_alarm'
compiling SIM800A.c...
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_rcc_ex.h(1877): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_rcc.h(1174): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_rcc.h(1175): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h(255): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_GPIO_LockPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(135): error:  #20: identifier "HAL_LockTypeDef" is undefined
    HAL_LockTypeDef       Lock;                            /*!< DMA locking object                     */  
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(385): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(386): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_DeInit (DMA_HandleTypeDef *hdma);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(395): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_Start (DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(396): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(397): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(398): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(399): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t Timeout);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(401): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID, void (* pCallback)( DMA_HandleTypeDef * _hdma));
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_dma.h(402): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(199): error:  #20: identifier "HAL_LockTypeDef" is undefined
    HAL_LockTypeDef             Lock;       /*!< CAN locking object             */
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(701): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef* hcan);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(702): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef* hcan, CAN_FilterConfTypeDef* sFilterConfig);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(703): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef* hcan);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(715): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_Transmit(CAN_HandleTypeDef *hcan, uint32_t Timeout);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(716): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_Transmit_IT(CAN_HandleTypeDef *hcan);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(717): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_Receive(CAN_HandleTypeDef *hcan, uint8_t FIFONumber, uint32_t Timeout);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(718): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_Receive_IT(CAN_HandleTypeDef *hcan, uint8_t FIFONumber);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(719): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_Sleep(CAN_HandleTypeDef *hcan);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_can.h(720): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_adc.h(200): error:  #20: identifier "HAL_LockTypeDef" is undefined
    HAL_LockTypeDef               Lock;                   /*!< ADC locking object */
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_adc_ex.h(665): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef       HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_adc_ex.h(668): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef       HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_adc_ex.h(669): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef       HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_adc_ex.h(670): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef       HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout);
..\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_adc_ex.h(673): error:  #20: identifier "HAL_StatusTypeDef" is undefined
  HAL_StatusTypeDef       HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc);
..\Src\SIM800A.c: 0 warnings, 30 errors
"gsm_alarm\gsm_alarm.axf" - 30 Error(s), 0 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.8.0.pack
                ARM.CMSIS.5.8.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.5.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F1xx_DFP.2.1.0.pack
                Keil.STM32F1xx_DFP.2.1.0
                STMicroelectronics STM32F1 Series Device Support, Drivers and Examples

<h2>Collection of Component include folders:</h2>
  .\RTE\_gsm_alarm
  C:\Users\Àäìèíèñòðàòîð\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include
  C:\Users\Àäìèíèñòðàòîð\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.5.0
Target not created.
Build Time Elapsed:  00:00:05
</pre>
</body>
</html>
